(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const r of a.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function e(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerPolicy&&(a.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?a.credentials="include":i.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(i){if(i.ep)return;i.ep=!0;const a=e(i);fetch(i.href,a)}})();class I{constructor(){this.canvas=null,this.isVisible=!1,this.isRunning=!1,this.targetPosition={x:0,y:0},this.targetSize={width:100,height:100},this.frames=[],this.currentFrame=0,this.frameCount=0,this.fps=.8,this.lastFrameTime=0,this.isLoaded=!1,this.ctx=null,this.animationId=null,this.cachedSizes=new Map,console.log("AR动画类初始化完成")}start(t,e,s){t&&(console.log("启动AR动画..."),this.canvas=t,this.ctx=t.getContext("2d"),this.targetPosition=e||{x:0,y:0},this.targetSize=s||{width:100,height:100},this.isRunning||(this.isRunning=!0,this.isVisible=!0,this.lastFrameTime=performance.now(),this.animate()),console.log("AR动画已启动"))}stop(){console.log("停止AR动画..."),this.isRunning=!1,this.isVisible=!1,this.animationId&&(cancelAnimationFrame(this.animationId),this.animationId=null),this.ctx&&this.canvas&&this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),console.log("AR动画已停止")}animate(){if(!this.isRunning||!this.ctx||!this.canvas)return;const t=performance.now();t-this.lastFrameTime>=1e3/this.fps&&(this.currentFrame=(this.currentFrame+1)%this.frameCount,this.lastFrameTime=t),this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.drawCurrentFrame(),this.animationId=requestAnimationFrame(()=>this.animate())}drawCurrentFrame(){if(!this.isLoaded||this.frames.length===0){console.log("动画未加载完成，跳过绘制",{isLoaded:this.isLoaded,framesCount:this.frames.length,currentFrame:this.currentFrame}),this.ctx&&this.canvas&&(this.ctx.fillStyle="rgba(255, 0, 0, 0.8)",this.ctx.fillRect(10,10,300,60),this.ctx.fillStyle="white",this.ctx.font="16px Arial",this.ctx.fillText("动画未加载",20,35),this.ctx.fillText(`已加载: ${this.frames.filter(s=>s).length}/${this.frameCount}`,20,55));return}const t=this.frames[this.currentFrame];if(!t){console.log("当前帧不存在",{currentFrame:this.currentFrame,totalFrames:this.frameCount,frames:this.frames.map(s=>s?"loaded":"null")}),this.ctx&&this.canvas&&(this.ctx.fillStyle="rgba(255, 165, 0, 0.8)",this.ctx.fillRect(10,10,300,60),this.ctx.fillStyle="white",this.ctx.font="16px Arial",this.ctx.fillText("当前帧不存在",20,35),this.ctx.fillText(`帧${this.currentFrame} / 总${this.frameCount}`,20,55));return}const e=this.getCachedDrawInfo(t);this.ctx.drawImage(t,e.x,e.y,e.width,e.height)}drawCurrentFrameToContext(t,e,s){if(!this.isLoaded||this.frames.length===0){console.log("动画未加载完成，跳过绘制到目标context");return}const i=this.frames[this.currentFrame];if(!i){console.log("当前帧不存在，跳过绘制到目标context");return}const a=50+Math.max(this.targetSize.width*1.5,180)/2,r=s-200+Math.max(this.targetSize.height*1.5,180)/2,n={width:Math.max(this.targetSize.width*1.5,180),height:Math.max(this.targetSize.height*1.5,180)},c=i.width,h=i.height,o=Math.min(n.width/c,n.height/h),l=c*o,d=h*o,u=a-l/2,w=r-d/2;let g=Math.max(20,Math.min(u,e-l-20)),m=Math.max(20,Math.min(w,s-d-20));t.drawImage(i,g,m,l,d),console.log("动画帧已绘制到目标context",{frame:this.currentFrame,position:{x:g,y:m,width:l,height:d},targetCanvasSize:`${e}x${s}`})}getCachedDrawInfo(t){const e=`${t.width}-${t.height}-${this.targetSize.width}-${this.targetSize.height}`;if(this.cachedSizes.has(e))return this.cachedSizes.get(e);const s=this.targetPosition.x,i=this.targetPosition.y,a=150,r=Math.max(this.targetSize.width,this.targetSize.height),n=Math.max(a,r*1.5),c=t.width,h=t.height,o=Math.min(n/c,n/h),l=c*o,d=h*o,u=s-l/2,w=i-d/2,g=window.innerWidth,m=window.innerHeight;let f=Math.max(10,Math.min(u,g-l-10)),p=Math.max(10,Math.min(w,m-d-10));const y={x:f,y:p,width:l,height:d};return this.cachedSizes.set(e,y),y}loadFrames(){return new Promise((t,e)=>{const s="/AR3/images/",i=[s+"zm1.png",s+"zm2.png"];let a=0,r=0;const n=i.length;console.log("开始加载PNG动画帧...",i);const c=setTimeout(()=>{a<n&&(console.error("动画加载超时，已加载:",a,"/",n),e(new Error("动画加载超时")))},5e3);i.forEach((h,o)=>{const l=new Image;l.onload=()=>{a++,console.log(`✅ 帧${o+1}加载成功:`,h,`(${l.width}x${l.height})`),this.frames[o]=l,a===n&&(clearTimeout(c),this.frameCount=n,this.isLoaded=!0,console.log("🎉 所有动画帧加载完成!",{totalFrames:this.frameCount,frames:this.frames.map(d=>d?`${d.width}x${d.height}`:"null")}),t())},l.onerror=d=>{r++,console.error(`❌ 帧${o+1}加载失败:`,h,d),this.frames[o]=null,r===n&&(clearTimeout(c),console.error("所有动画帧加载失败"),e(new Error("所有动画帧加载失败")))},l.crossOrigin="anonymous",l.src=h,console.log(`🔄 开始加载帧${o+1}:`,h)})})}loadGif(t){return console.log("检测到GIF路径，自动切换到PNG逐帧动画模式"),this.loadFrames()}init(){console.log("AR动画初始化完成")}showAnimation(t,e){this.start(null,t,e)}hideAnimation(){this.stop()}update(){}dispose(){this.stop(),this.frames=[],this.isLoaded=!1,this.cachedSizes.clear(),console.log("AR动画资源已清理")}}class A{constructor(){this.lastDetection=null,this.detectionTimeout=500,this.templates=[],this.threshold=.15,this.debugMode=!1,this.lastDetectionTime=0,this.detectionInterval=250,this.isInitialized=!1,this.detectionCache=new Map,this.cacheTimeout=1e3,setTimeout(()=>{this.isInitialized=!0,console.log("图片追踪器延迟初始化完成")},200)}addTemplate(t,e="template"){return new Promise((s,i)=>{const a=new Image;a.crossOrigin="anonymous";const r=setTimeout(()=>{i(new Error("图片加载超时"))},2e3);a.onload=()=>{clearTimeout(r);const n=document.createElement("canvas"),c=n.getContext("2d"),h=150,o=Math.min(h/a.width,h/a.height,1);n.width=a.width*o,n.height=a.height*o,c.drawImage(a,0,0,n.width,n.height);const l=c.getImageData(0,0,n.width,n.height);this.templates.push({name:e,imageData:l,width:n.width,height:n.height}),console.log(`模板图片 "${e}" 添加成功，尺寸: ${n.width}x${n.height}`),s()},a.onerror=n=>{clearTimeout(r),console.error(`模板图片 "${e}" 加载失败:`,n),i(n)},a.src=t})}async detect(t,e,s){try{const i=Date.now();if(i-this.lastDetectionTime<this.detectionInterval)return this.lastDetection?this.lastDetection.result:{detected:!1};this.lastDetectionTime=i;const a=`${e}x${s}`,r=this.detectionCache.get(a);if(r&&i-r.timestamp<this.cacheTimeout)return r.result;if(this.lastDetection&&i-this.lastDetection.timestamp<this.detectionTimeout)return this.lastDetection.result;const n=t.getImageData(0,0,e,s);for(const h of this.templates){const o=this.matchTemplateOptimized(n,h,e,s);if(o&&o.confidence>this.threshold){const l={detected:!0,type:"image",name:h.name,position:o.position,size:o.size,confidence:o.confidence};return this.detectionCache.set(a,{timestamp:i,result:l}),this.lastDetection={timestamp:i,result:l},console.log(`✅ 检测到图片 "${h.name}"，匹配度: ${o.confidence.toFixed(3)}`),l}}this.lastDetection&&i-this.lastDetection.timestamp>this.detectionTimeout&&(this.lastDetection=null);const c={detected:!1};return this.detectionCache.set(a,{timestamp:i,result:c}),c}catch(i){return console.error("图片检测错误:",i),{detected:!1}}}matchTemplateOptimized(t,e,s,i){const a=e.width,r=e.height;if(a>s||r>i)return null;let n=null,c=0;const h=Math.max(3,Math.floor(Math.min(a,r)/20)),o=Math.min(80,Math.floor(Math.min(s,i)*.08)),l=o,d=o,u=s-a-o,w=i-r-o,g=100;let m=0;for(let f=d;f<=w&&m<g;f+=h)for(let p=l;p<=u&&m<g;p+=h){m++;const y=this.calculateSimilarityFast(t,e.imageData,p,f,s,0,0,a,a,r);if(y>c&&(c=y,n={position:{x:p,y:f},size:{width:a,height:r},confidence:y},y>.8))return n}return n}calculateSimilarityFast(t,e,s,i,a,r,n,c,h,o){let l=0,d=0;const u=Math.max(1,Math.floor(Math.min(h,o)/10));for(let g=0;g<o;g+=u)for(let m=0;m<h;m+=u){const f=((i+g)*a+(s+m))*4,p=((n+g)*c+(r+m))*4,y=Math.abs(t.data[f]-e.data[p]),T=Math.abs(t.data[f+1]-e.data[p+1]),C=Math.abs(t.data[f+2]-e.data[p+2]);l+=(y+T+C)/3,d++}if(d===0)return 0;const w=l/d;return Math.max(0,1-w/255)}matchTemplate(t,e,s,i){return this.matchTemplateOptimized(t,e,s,i)}calculateSimilarity(t,e,s,i,a,r,n,c,h,o){return this.calculateSimilarityFast(t,e,s,i,a,r,n,c,h,o)}detectSimple(t,e,s){try{const i=t.getImageData(0,0,e,s),a=this.findHighContrastRegions(i,e,s);for(const r of a)if(this.isImageLike(r,i,e,s))return{detected:!0,type:"simple",position:{x:r.x,y:r.y},size:{width:r.width,height:r.height},confidence:.5};return{detected:!1}}catch(i){return console.error("简化检测错误:",i),{detected:!1}}}findHighContrastRegions(t,e,s){const i=[];for(let n=0;n<s-50;n+=25)for(let c=0;c<e-50;c+=25){const h=this.calculateRegionContrast(t,c,n,50,e);h>30&&i.push({x:c,y:n,width:50,height:50,contrast:h})}return i.sort((n,c)=>c.contrast-n.contrast).slice(0,3)}calculateRegionContrast(t,e,s,i,a){let r=255,n=0;for(let c=0;c<i;c++)for(let h=0;h<i;h++){const o=((s+c)*a+(e+h))*4,l=(t.data[o]+t.data[o+1]+t.data[o+2])/3;r=Math.min(r,l),n=Math.max(n,l)}return n-r}isImageLike(t,e,s,i){return this.calculateEdgeDensity(e,t.x,t.y,t.width,t.height,s)>.1}calculateEdgeDensity(t,e,s,i,a,r){let n=0,c=0;for(let h=1;h<a-1;h++)for(let o=1;o<i-1;o++){const l=((s+h)*r+(e+o))*4,d=(t.data[l]+t.data[l+1]+t.data[l+2])/3,u=((s+h)*r+(e+o-1))*4,w=(t.data[u]+t.data[u+1]+t.data[u+2])/3;Math.abs(d-w)>20&&n++,c++}return c>0?n/c:0}dispose(){this.templates=[],this.detectionCache.clear(),this.lastDetection=null,console.log("图片追踪器资源已清理")}}console.log("AR应用开始加载...");const v={enableFastStart:!0,resourceTimeout:2e3,detectionInterval:200,simpleDetection:!0,delayTrackerInit:500};function k(){if(console.log("检查基本功能..."),document.readyState==="loading")return console.log("DOM还在加载中..."),!1;const S=document.getElementById("startAR"),t=document.getElementById("startScreen"),e=document.getElementById("arScreen"),s=document.getElementById("loadingScreen");return console.log("UI元素检查:",{startARBtn:!!S,startScreen:!!t,arScreen:!!e,loadingScreen:!!s}),!S||!t||!e||!s?(console.error("必要的UI元素未找到！"),!1):!0}class R{constructor(){console.log("初始化OptimizedARApp..."),this.isInitialized=!1,this.isTracking=!1,this.animation=null,this.imageTracker=null,this.detectionCanvas=null,this.detectionCtx=null,this.resourcesLoaded=!1,this.currentCamera="environment",this.currentStream=null,this.init()}init(){if(console.log("开始快速初始化..."),!k()){console.error("基本功能检查失败"),this.hideLoading(),this.showError("应用初始化失败：基本功能检查失败");return}try{this.initUI(),this.initEventListeners(),v.enableFastStart&&(this.isInitialized=!0,this.hideLoading(),this.showStartScreen(),console.log("快速启动完成，界面已显示"),this.loadResourcesInBackground())}catch(t){console.error("初始化过程中出错:",t),this.hideLoading(),this.showError("应用初始化失败: "+t.message)}}initUI(){console.log("初始化UI元素..."),this.startScreen=document.getElementById("startScreen"),this.arScreen=document.getElementById("arScreen"),this.loadingScreen=document.getElementById("loadingScreen"),this.startARBtn=document.getElementById("startAR"),this.backBtn=document.getElementById("backBtn"),this.captureBtn=document.getElementById("captureBtn"),this.switchCameraBtn=document.getElementById("switchCameraBtn"),this.status=document.getElementById("status"),this.video=document.getElementById("video"),this.canvas=document.getElementById("canvas"),this.canvas&&(this.ctx=this.canvas.getContext("2d")),this.detectionCanvas=document.createElement("canvas"),this.detectionCtx=this.detectionCanvas.getContext("2d"),console.log("UI元素初始化完成")}async loadResourcesInBackground(){console.log("后台加载资源...");try{setTimeout(async()=>{await this.initTrackersAsync()},v.delayTrackerInit)}catch(t){console.error("后台资源加载失败:",t)}}async initTrackersAsync(){try{console.log("开始异步初始化追踪器...");const[t,e]=await Promise.allSettled([this.createImageTracker(),this.createAnimation()]);t.status==="fulfilled"&&(this.imageTracker=t.value,console.log("图片追踪器初始化成功")),e.status==="fulfilled"&&(this.animation=e.value,console.log("动画组件初始化成功")),this.resourcesLoaded=!0,console.log("AR组件初始化完成")}catch(t){console.error("追踪器初始化失败:",t)}}async createImageTracker(){const t=new A;t.detectionInterval=v.detectionInterval,t.threshold=.3;try{await t.addTemplate("/AR3/images/marker.png","marker"),console.log("Marker加载成功")}catch(e){throw console.log("Marker加载失败:",e.message),e}return t}async createAnimation(){const t=new I;console.log("创建动画组件...");try{await t.loadFrames(),console.log("PNG动画加载成功"),console.log("动画状态:",{isLoaded:t.isLoaded,frameCount:t.frameCount,framesLength:t.frames.length,fps:t.fps})}catch(e){console.log("PNG动画加载失败:",e.message)}return t}async addTestTemplate(t){try{const e=document.createElement("canvas"),s=e.getContext("2d");e.width=80,e.height=80,s.fillStyle="#FFFFFF",s.fillRect(0,0,80,80),s.strokeStyle="#000000",s.lineWidth=2,s.strokeRect(10,10,60,60),s.fillStyle="#000000",s.fillRect(25,25,30,30),e.toBlob(i=>{const a=URL.createObjectURL(i);t.addTemplate(a,"test-marker"),console.log("测试模板添加成功")})}catch(e){console.error("添加测试模板失败:",e)}}initEventListeners(){console.log("初始化事件监听器..."),this.startARBtn&&this.startARBtn.addEventListener("click",()=>this.startAR()),this.backBtn&&this.backBtn.addEventListener("click",()=>this.stopAR()),this.captureBtn&&this.captureBtn.addEventListener("click",()=>this.capturePhoto()),this.switchCameraBtn&&this.switchCameraBtn.addEventListener("click",()=>this.switchCamera()),console.log("事件监听器初始化完成")}async startAR(){console.log("开始AR体验..."),console.log("当前状态:",{isInitialized:this.isInitialized,resourcesLoaded:this.resourcesLoaded,hasImageTracker:!!this.imageTracker,hasAnimation:!!this.animation}),this.isInitialized||console.log("应用未完全初始化，尝试继续启动...");try{if(this.showARScreen(),this.hideAnimation(),!await this.requestCamera()){this.showError("无法启动摄像头，请检查权限设置");return}await this.waitForVideoLoad(),this.imageTracker||await this.waitForTracker(),this.startTracking()}catch(t){console.error("启动AR失败:",t),this.showError("启动AR失败: "+t.message)}}async waitForTracker(){return new Promise(t=>{const e=()=>{this.imageTracker?t():setTimeout(e,100)};e()})}startTracking(){this.isTracking||(this.isTracking=!0,this.trackFrame(),console.log("开始追踪"))}stopTracking(){this.isTracking=!1,this.animation&&this.animation.stop(),console.log("停止追踪")}trackFrame(){if(!(!this.isTracking||!this.video||!this.canvas||!this.ctx))try{const t=this.canvas.offsetWidth,e=this.canvas.offsetHeight,s=this.video.videoWidth,i=this.video.videoHeight,a=s/i,r=t/e;let n,c,h,o;a>r?(n=t,c=t/a,h=0,o=(e-c)/2):(c=e,n=e*a,h=(t-n)/2,o=0),this.canvas.width=t,this.canvas.height=e,this.ctx.drawImage(this.video,h,o,n,c),this.detectMarker(),requestAnimationFrame(()=>this.trackFrame())}catch(t){console.error("追踪帧处理错误:",t),this.stopTracking()}}async detectMarker(){if(!this.imageTracker){console.log("图片追踪器未准备好，跳过检测");return}if(!this.ctx){console.log("Canvas上下文未准备好，跳过检测");return}try{const t=await this.imageTracker.detect(this.ctx,this.canvas.width,this.canvas.height);t&&t.detected&&t.confidence>.4&&t.position&&t.size&&t.size.width>10&&t.size.height>10?(console.log("检测到marker:",{confidence:t.confidence,position:t.position,size:t.size}),this.showAnimation(t)):this.hideAnimation()}catch(t){console.error("检测marker错误:",t)}}showAnimation(t){if(!this.animation){console.log("动画组件不存在，跳过显示");return}if(!this.canvas){console.log("Canvas不存在，跳过显示");return}if(!t||!t.position||!t.size){console.log("检测结果数据不完整，跳过显示");return}try{const e={x:50,y:this.canvas.height-200},s={width:Math.max(t.size.width*1.8,180),height:Math.max(t.size.height*1.8,180)};console.log("准备显示动画",{position:e,size:s,animationLoaded:this.animation.isLoaded,framesCount:this.animation.frames?this.animation.frames.length:0,frameCount:this.animation.frameCount,canvasSize:`${this.canvas.width}x${this.canvas.height}`}),this.animation.start(this.canvas,e,s)}catch(e){console.error("显示动画错误:",e)}}hideAnimation(){this.animation&&this.animation.stop()}async requestCamera(){try{this.currentStream&&this.currentStream.getTracks().forEach(e=>e.stop());const t=await navigator.mediaDevices.getUserMedia({video:{width:{ideal:640},height:{ideal:480},facingMode:this.currentCamera}});return this.currentStream=t,this.video.srcObject=t,this.video.play(),console.log(`摄像头启动成功: ${this.currentCamera==="environment"?"后置":"前置"}`),!0}catch(t){return console.error("摄像头启动失败:",t),!1}}waitForVideoLoad(){return new Promise((t,e)=>{const s=setTimeout(()=>{e(new Error("视频加载超时"))},5e3);this.video.onloadedmetadata=()=>{clearTimeout(s),console.log("视频加载完成",{videoWidth:this.video.videoWidth,videoHeight:this.video.videoHeight}),t()},this.video.onerror=i=>{clearTimeout(s),e(new Error("视频加载失败"))}})}stopAR(){console.log("停止AR体验..."),this.stopTracking(),this.hideAnimation(),this.currentStream&&(this.currentStream.getTracks().forEach(t=>t.stop()),this.currentStream=null),this.showStartScreen(),this.updateStatus("AR体验已停止 / AR Experience Stopped")}async switchCamera(){try{if(console.log("切换摄像头..."),this.updateStatus("切换摄像头中... / Switching camera..."),this.currentCamera=this.currentCamera==="environment"?"user":"environment",await this.requestCamera()){await this.waitForVideoLoad();const e=this.currentCamera==="environment"?"后置":"前置";this.updateStatus(`已切换到${e}摄像头 / Switched to ${e} camera`),console.log(`摄像头切换成功: ${e}`)}else this.currentCamera=this.currentCamera==="environment"?"user":"environment",await this.requestCamera(),await this.waitForVideoLoad(),this.updateStatus("摄像头切换失败 / Camera switch failed"),console.error("摄像头切换失败")}catch(t){console.error("摄像头切换出错:",t),this.updateStatus("摄像头切换失败 / Camera switch failed")}}capturePhoto(){if(!(!this.canvas||!this.video))try{const t=document.createElement("canvas"),e=t.getContext("2d"),s=this.video.videoWidth,i=this.video.videoHeight;t.width=s,t.height=i,e.drawImage(this.video,0,0,s,i),this.animation&&this.animation.isLoaded&&this.animation.drawCurrentFrameToContext(e,s,i);const a=document.createElement("a");a.download=`ar_photo_${Date.now()}.png`,a.href=t.toDataURL(),a.click(),this.updateStatus("照片已保存（包含完整背景和动画） / Photo saved (with background and animation)")}catch(t){console.error("拍照失败:",t),this.updateStatus("拍照失败 / Photo capture failed")}}showLoading(){this.loadingScreen&&(this.loadingScreen.style.display="flex"),this.startScreen&&(this.startScreen.style.display="none"),this.arScreen&&(this.arScreen.style.display="none")}hideLoading(){this.loadingScreen&&(this.loadingScreen.style.display="none")}showStartScreen(){this.startScreen&&(this.startScreen.style.display="flex"),this.arScreen&&(this.arScreen.style.display="none"),this.loadingScreen&&(this.loadingScreen.style.display="none")}showARScreen(){this.arScreen&&(this.arScreen.style.display="flex"),this.startScreen&&(this.startScreen.style.display="none"),this.loadingScreen&&(this.loadingScreen.style.display="none")}updateStatus(t){this.status&&(this.status.textContent=t),console.log("状态更新:",t)}showError(t){console.error("错误:",t),this.updateStatus("错误: "+t+" / Error: "+t),setTimeout(()=>{this.updateStatus("")},3e3)}}function x(){if(console.log("开始初始化AR应用..."),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia){alert("您的浏览器不支持摄像头功能，请使用现代浏览器");return}window.arApp=new R}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",x):x();
//# sourceMappingURL=main-Ckfbthd-.js.map
